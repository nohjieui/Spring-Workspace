<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
	    /WEB-INF/spring/root-context.xml
	    /WEB-INF/spring/spring-security.xml
	    /WEB-INF/spring/spring-scheduler.xml
	    /WEB-INF/spring/spring-quartz.xml
    </param-value>
  </context-param>
  
  <!-- 
  	ContextLoaderListener : application scope를 가진 context객체가 생성되는 시점을 감지하는 클래스
  	위의 <context-param>에 등록한 key, value 값들의 xml 정보를 읽어들이는 역할을 함
  	프로그램 구동시 읽어들일 파일이 많다면 </param-value>에 여러개 등록할 수 있음
  	
  	간단히 말하자면 ContextLoaderListener는 프로그램시작과 동시에 <context-param>안에있는 xml파일을 읽어들인다!
   -->
  <!-- listener : 자바용 이벤트리스너라고 생각하면 됨 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <!-- 
  	DispatcherServlet : 요청(request)/응답(response)을 나눠주는 서블릿
  	
  	모든 요청을 가장 먼저 앞에서 받아들여서 알맞은 controller로 연결을 해주고
  	controller의 반환 결과에 따라서 알맞은 view를 선택해 클라이언트에게 응답하는 역할
   -->
  <servlet>
    <servlet-name>appServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>appServlet</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
  
  <!-- 
  	* 필터
  	모든 요청 처리전 공통적으로 필요로하는 기능들을 클라이언트의 요청을 controller가 받기 전에 먼저 수행하는 클래스
  	
  	* 스프링에서 제공해주는 인코딩 필터 등록
  	- org.springframework.web.filter.CharacterEncodingFilter
  	- 필터 등록시 filter태그와 filter-mapping태그를 같이 사용한다.
  	- filter-name태그로 filter명을 지정
   -->
  <filter>
  
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    
    <!-- 인코딩 환경 충돌시 강제 인코딩하도록 설정 -->
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
    
  </filter>
  
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
</web-app>